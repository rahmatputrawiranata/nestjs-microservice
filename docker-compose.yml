version: '3'

services:

  # MySQL
  mysql:
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_TCP_PORT: "${DATABASE_PORT}"
      MYSQL_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
      MYSQL_DATABASE: "${DATABASE_DB}"
    ports:
      - '${DATABASE_PORT}:${DATABASE_PORT}'
    networks:
      - db
  # MONGO
  mongo:
    image: mongo
    restart: always
    networks:
      - db
  
  #USER SERVICE
  user_service:
    build:
      dockerfile: Dockerfile
      context: ./user-service
    restart: always
    environment:
      DATABASE_HOST: mysql
      DATABASE_PORT: 3307
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DB: ${DATABASE_DB}
      USER_SERVICE_HOST: user_service
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    depends_on:
      - mysql
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    networks:
      - db
      - service

  #PRODUCT SERVICE
  product_service:
    build:
      dockerfile: Dockerfile
      context: ./product-service
    restart: always
    environment:
      DATABASE_HOST: mysql
      DATABASE_PORT: 3307
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DB: ${DATABASE_DB}
      PRODUCT_SERVICE_HOST: product_service
      PRODUCT_SERVICE_PORT: ${PRODUCT_SERVICE_PORT}
    depends_on:
      - mysql
    ports:
      - "${PRODUCT_SERVICE_PORT}:${PRODUCT_SERVICE_PORT}"
    networks:
      - db
      - service

  #NOTIFICATION SERVICE
  notification_service:
    build:
      dockerfile: Dockerfile
      context: ./notification-service
    restart: always
    environment:
      MONGO_DATABASE_HOST: mongo
      MONGO_DATABASE_PORT: ${MONGO_DATABASE_PORT}
      MONGO_DATABASE_NAME: ${MONGO_DATABASE_NAME}
      NOTIFICATION_SERVICE_HOST: notification_service
      NOTIFICATION_SERVICE_PORT: ${NOTIFICATION_SERVICE_PORT}
    depends_on:
      - mongo
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:${NOTIFICATION_SERVICE_PORT}"
      - "${NOTIFICATION_SOCKET_PORT}:${NOTIFICATION_SOCKET_PORT}"
    networks:
      - db
      - service

  #TRANSACTION SERVICE
  transaction_service:
    build:
      dockerfile: Dockerfile
      context: ./transaction-service
    restart: always
    environment:
      DATABASE_HOST: mysql
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DB: ${DATABASE_DB}
      TRANSACTION_SERVICE_HOST: transaction_service
      TRANSACTION_SERVICE_PORT: ${TRANSACTION_SERVICE_PORT}
      PRODUCT_SERVICE_HOST: product_service
      PRODUCT_SERVICE_PORT: ${PRODUCT_SERVICE_PORT}
      USER_SERVICE_HOST: user_service
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
      NOTIFICATION_SERVICE_HOST: notification_service
      NOTIFICATION_SERVICE_PORT: ${NOTIFICATION_SERVICE_PORT}
    depends_on:
      - product_service
      - user_service
      - notification_service
      - mysql
    ports:
      - ${TRANSACTION_SERVICE_PORT}:${TRANSACTION_SERVICE_PORT}
    networks:
      - db
      - service
  gateway:
    build:
      dockerfile: Dockerfile
      context: ./gateway
    restart: always
    environment:
      GATEWAY_HOST: gateway
      GATEWAY_PORT: ${GATEWAY_PORT}
      USER_SERVICE_HOST: user_service
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
      PRODUCT_SERVICE_HOST: product_service
      PRODUCT_SERVICE_PORT: ${PRODUCT_SERVICE_PORT}
      TRANSACTION_SERVICE_HOST: transaction_service
      TRANSACTION_SERVICE_PORT: ${TRANSACTION_SERVICE_PORT}
    depends_on:
      - mysql
      - user_service
      - product_service
      - transaction_service
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    networks:
      - db
      - service
  client_app:
    build:
      dockerfile: Dockerfile
      context: ./client-app
    restart: always
    environment:
      REACT_APP_SERVER_BE_HOST: ${REACT_APP_SERVER_BE_HOST}
      REACT_APP_SERVER_BE_PORT: ${REACT_APP_SERVER_BE_PORT}
      REACT_APP_SERVER_SOCKET_HOST: ${REACT_APP_SERVER_SOCKET_HOST}
      REACT_APP_SERVER_SOCKET_PORT: ${REACT_APP_SERVER_SOCKET_PORT}
    depends_on:
      - gateway
    networks:
      - service
    ports:
      - "80:3000"
networks:
  db: 
    driver: bridge
    name: db
  service:
    driver: bridge
    name: service
# volumes:
#   mysql_data:
#     name: mysql_data


